// Import the HashMap class
import java.util.HashMap;

public class HashmapConversion {
  public static void main(String[] args) {

    // Create a HashMap object 
    HashMap<String, Integer> Alphabet = new HashMap<String, Integer>();
    // Add keys and values (Letter, Value)
    Alphabet.put("A", 1);
    Alphabet.put("B", 2);
    Alphabet.put("C", 3);
	Alphabet.put("D", 4);
	Alphabet.put("E", 4);
	Alphabet.put("F", 5);
	Alphabet.put("G", 6);
	Alphabet.put("H", 8);
	Alphabet.put("I", 9);
	Alphabet.put("J", 10);
	Alphabet.put("K", 11);
	Alphabet.put("L", 12);
	Alphabet.put("M", 13);
	Alphabet.put("N", 14);
	Alphabet.put("O", 15);
	Alphabet.put("P", 16);
	Alphabet.put("Q", 17);
	Alphabet.put("R", 18);
	Alphabet.put("S", 19);
	Alphabet.put("T", 20);
	Alphabet.put("U", 21);
	Alphabet.put("V", 22);
	Alphabet.put("W", 23);
	Alphabet.put("X", 24);
	Alphabet.put("Y", 25);
	Alphabet.put("Z", 26);
    // (if needed) System.out.println(Alphabet); 
	
	HashMap<Integer, String> AlphabetInv = new HashMap<Integer, String>();
    AlphabetInv.put(1, "A");
    AlphabetInv.put(2, "B");
    AlphabetInv.put(3, "C");
	AlphabetInv.put(4, "D");
	AlphabetInv.put(5, "E");
	AlphabetInv.put(6, "F");
	AlphabetInv.put(7, "G");
	AlphabetInv.put(8, "H");
	AlphabetInv.put(9, "I");
	AlphabetInv.put(10, "J");,  
	AlphabetInv.put(11, "K");
	AlphabetInv.put(12, "L");
	AlphabetInv.put(13, "M");
	AlphabetInv.put(14, "N");
	AlphabetInv.put(15, "O");
	AlphabetInv.put(16, "P");
	AlphabetInv.put(17, "Q");
	AlphabetInv.put(18, "R");
	AlphabetInv.put(19, "S");
	AlphabetInv.put(20, "T");
	AlphabetInv.put(21, "U");
	AlphabetInv.put(22, "V");
	AlphabetInv.put(23, "W");
	AlphabetInv.put(24, "X");
	AlphabetInv.put(25, "Y");
	AlphabetInv.put(26, "Z");
	
	HashMap<String, Integer> Rotor1 = new HashMap<String, Integer>();
    Rotor1.put("A", 5);
    Rotor1.put("E", 11);
    Rotor1.put("K", 13);
	Rotor1.put("M", 3;
	Rotor1.put("F", 12);
	Rotor1.put("L", 7);
	Rotor1.put("G", 4);
	Rotor1.put("D", 17);
	Rotor1.put("Q", 22);
	Rotor1.put("V", 26);
	Rotor1.put("Z", 14);
	Rotor1.put("N", 20);
	Rotor1.put("T", 15);
	Rotor1.put("O", 23);
	Rotor1.put("W", 25);
	Rotor1.put("Y", 8);
	Rotor1.put("H", 24);
	Rotor1.put("X", 21);
	Rotor1.put("U", 19);
	Rotor1.put("S", 16);
	Rotor1.put("P", 1);
	Rotor1.put("A", 9);
	Rotor1.put("I", 2);
	Rotor1.put("R", 8);
	Rotor1.put("C", 3);
	Rotor1.put("J", 10);
	
	HashMap<Integer, String> Rotor1Inv = new HashMap<Integer, String>();
    Rotor1Inv.put(5, "A");
    Rotor1Inv.put(11, "E");
    Rotor1Inv.put(13, "K");
	Rotor1Inv.put(3, "M");
	Rotor1Inv.put(12, "F");
	Rotor1Inv.put(7, "L");
	Rotor1Inv.put(4, "G");
	Rotor1Inv.put(17, "D");
	Rotor1Inv.put(22, "Q");
	Rotor1Inv.put(26, "V");
	Rotor1Inv.put(14, "Z");
	Rotor1Inv.put(20, "N");
	Rotor1Inv.put(15, "T");
	Rotor1Inv.put(23, "O");
	Rotor1Inv.put(25, "W");
	Rotor1Inv.put(8, "Y");
	Rotor1Inv.put(24, "H");
	Rotor1Inv.put(21, "X");
	Rotor1Inv.put(19, "U");
	Rotor1Inv.put(16, "S");
	Rotor1Inv.put(1, "P");
	Rotor1Inv.put(9, "A");
	Rotor1Inv.put(2, "I");
	Rotor1Inv.put(8, "R");
	Rotor1Inv.put(3, "C");
	Rotor1Inv.put(10, "J");
	
	HashMap<String, Integer> Rotor2 = new HashMap<String, Integer>();
    Rotor2.put("A", 1);
    Rotor2.put("J", 10);
    Rotor2.put("D", 4);
	Rotor2.put("K", 11);
	Rotor2.put("S", 19);
	Rotor2.put("I", 9);
	Rotor2.put("R", 18);
	Rotor2.put("U", 21);
	Rotor2.put("X", 24);
	Rotor2.put("B", 2);
	Rotor2.put("L", 12);
	Rotor2.put("H", 8);
	Rotor2.put("W", 23);
	Rotor2.put("T", 20);
	Rotor2.put("M", 13);
	Rotor2.put("C", 3);
	Rotor2.put("Q", 17);
	Rotor2.put("G", 7);
	Rotor2.put("Z", 26);
	Rotor2.put("N", 14);
	Rotor2.put("P", 16);
	Rotor2.put("Y", 25);
	Rotor2.put("F", 6);
	Rotor2.put("V", 22);
	Rotor2.put("O", 15);
	Rotor2.put("E", 5);
	
	HashMap<Integer, String> Rotor2Inv = new HashMap<Integer, String>();
    Rotor2Inv.put(1, "A");
    Rotor2Inv.put(10, "J");
    Rotor2Inv.put(4, "D");
	Rotor2Inv.put(11, "K");
	Rotor2Inv.put(19, "S");
	Rotor2Inv.put(9, "I");
	Rotor2Inv.put(18, "R");
	Rotor2Inv.put(21, "U");
	Rotor2Inv.put(24, "X");
	Rotor2Inv.put(2, "B");
	Rotor2Inv.put(12, "L");
	Rotor2Inv.put(8, "H");
	Rotor2Inv.put(23, "W");
	Rotor2Inv.put(20, "T");
	Rotor2Inv.put(13, "M");
	Rotor2Inv.put(3, "C");
	Rotor2Inv.put(17, "Q");
	Rotor2Inv.put(7, "G");
	Rotor2Inv.put(26, "Z");
	Rotor2Inv.put(14, "N");
	Rotor2Inv.put(16, "P");
	Rotor2Inv.put(25, "Y");
	Rotor2Inv.put(6, "F");
	Rotor2Inv.put(22, "V");
	Rotor2Inv.put(15, "O");
	Rotor2Inv.put(5, "E");
	
	HashMap<String, Integer> Rotor3 = new HashMap<String, Integer>();
    Rotor3.put("A", 2); 
    Rotor3.put("J", 4);
    Rotor3.put("D", 6);
	Rotor3.put("K", 8);
	Rotor3.put("S", 10);
	Rotor3.put("I", 12);
	Rotor3.put("R", 3);
	Rotor3.put("U", 16);
	Rotor3.put("X", 18);
	Rotor3.put("B", 20);
	Rotor3.put("L", 24);
	Rotor3.put("H", 22);
	Rotor3.put("W", 26);
	Rotor3.put("T", 14);
	Rotor3.put("M", 25);
	Rotor3.put("C", 5);
	Rotor3.put("Q", 9);
	Rotor3.put("G", 23);
	Rotor3.put("Z", 7);
	Rotor3.put("N", 1);
	Rotor3.put("P", 11);
	Rotor3.put("Y", 13);
	Rotor3.put("F", 21);
	Rotor3.put("V", 19);
	Rotor3.put("O", 17);
	Rotor3.put("E", 15);
	
	HashMap<Integer, String> Rotor3Inv = new HashMap<Integer, String>();
    Rotor3Inv.put(2, "A"); 
    Rotor3Inv.put(4, "J");
    Rotor3Inv.put(6, "D");
	Rotor3Inv.put(8, "K");
	Rotor3Inv.put(10, "S");
	Rotor3Inv.put(12, "I");
	Rotor3Inv.put(3, "R");
	Rotor3Inv.put(16, "U");
	Rotor3Inv.put(18, "X");
	Rotor3Inv.put(20, "B");
	Rotor3Inv.put(24, "L");
	Rotor3Inv.put(22, "H");
	Rotor3Inv.put(26, "W");
	Rotor3Inv.put(14, "T");
	Rotor3Inv.put(25, "M");
	Rotor3Inv.put(5, "C");
	Rotor3Inv.put(9, "Q");
	Rotor3Inv.put(23, "G");
	Rotor3Inv.put(7, "Z");
	Rotor3Inv.put(1, "N");
	Rotor3Inv.put(11, "P");
	Rotor3Inv.put(13, "Y");
	Rotor3Inv.put(21, "F");
	Rotor3Inv.put(19, "V");
	Rotor3Inv.put(17, "O");
	Rotor3Inv.put(15, "E");
	
	HashMap<String, Integer> Rotor4 = new HashMap<String, Integer>();
    Rotor4.put("E", 1);
    Rotor4.put("S", 10);
    Rotor4.put("O", 4);
	Rotor4.put("V", 11);
	Rotor4.put("P", 19);
	Rotor4.put("Z", 9);
	Rotor4.put("J", 18);
	Rotor4.put("A", 21);
	Rotor4.put("Y", 24);
	Rotor4.put("Q", 2);
	Rotor4.put("U", 12);
	Rotor4.put("I", 8);
	Rotor4.put("R", 23);
	Rotor4.put("H", 20);
	Rotor4.put("X", 13);
	Rotor4.put("L", 3);
	Rotor4.put("N", 17);
	Rotor4.put("F", 7);
	Rotor4.put("T", 26);
	Rotor4.put("G", 14);
	Rotor4.put("K", 16);
	Rotor4.put("D", 25);
	Rotor4.put("C", 6);
	Rotor4.put("M", 22);
	Rotor4.put("W", 15);
	Rotor4.put("B", 5);
	
	HashMap<Integer, String> Rotor4Inv = new HashMap<String, Integer>();
    Rotor4Inv.put(1, "E");
    Rotor4Inv.put(10, "S");
    Rotor4Inv.put(4, "O");
	Rotor4Inv.put(11, "V");
	Rotor4Inv.put(19, "P");
	Rotor4Inv.put(9, "Z");
	Rotor4Inv.put(18, "J");
	Rotor4Inv.put(21, "A");
	Rotor4Inv.put(24, "Y");
	Rotor4Inv.put(2, "Q");
	Rotor4Inv.put(12, "U");
	Rotor4Inv.put(8, "I");
	Rotor4Inv.put(23, "R");
	Rotor4Inv.put(20, "H");
	Rotor4Inv.put(13, "X");
	Rotor4Inv.put(3, "L");
	Rotor4Inv.put(17, "N");
	Rotor4Inv.put(7, "F");
	Rotor4Inv.put(26, "T");
	Rotor4Inv.put(14, "G");
	Rotor4Inv.put(16, "K");
	Rotor4Inv.put(25, "D");
	Rotor4Inv.put(6, "C");
	Rotor4Inv.put(22, "M");
	Rotor4Inv.put(15, "W");
	Rotor4Inv.put(5, "B");
	
	HashMap<String, Integer> Rotor5 = new HashMap<String, Integer>();
    Rotor5.put("V", 22);
    Rotor5.put("Z", 26);
    Rotor5.put("B", 2);
	Rotor5.put("R", 18);
	Rotor5.put("G", 7);
	Rotor5.put("I", 9);
	Rotor5.put("T", 20);
	Rotor5.put("Y", 25);
	Rotor5.put("U", 21);
	Rotor5.put("P", 16);
	Rotor5.put("S", 19);
	Rotor5.put("D", 4);
	Rotor5.put("N", 14);
	Rotor5.put("H", 8);
	Rotor5.put("L", 12);
	Rotor5.put("X", 24);
	Rotor5.put("A", 1);
	Rotor5.put("W", 23);
	Rotor5.put("M", 13);
	Rotor5.put("J", 10);
	Rotor5.put("Q", 17);
	Rotor5.put("O", 15);
	Rotor5.put("F", 6);
	Rotor5.put("E", 5);
	Rotor5.put("C", 3);
	Rotor5.put("K", 11);
	
	HashMap<Integer, String> Rotor5Inv = new HashMap<String, Integer>();
    Rotor5Inv.put(22, "V");
    Rotor5Inv.put(26, "Z");
    Rotor5Inv.put(2, "B");
	Rotor5Inv.put(18, "R");
	Rotor5Inv.put(7, "G");
	Rotor5Inv.put(9, "I");
	Rotor5Inv.put(20, "T");
	Rotor5Inv.put(25, "Y");
	Rotor5Inv.put(21, "U");
	Rotor5Inv.put(16, "P");
	Rotor5Inv.put(19, "S");
	Rotor5Inv.put(4, "D");
	Rotor5Inv.put(14, "N");
	Rotor5Inv.put(8, "H");
	Rotor5Inv.put(12, "L");
	Rotor5Inv.put(24, "X");
	Rotor5Inv.put(1, "A");
	Rotor5Inv.put(23, "W");
	Rotor5Inv.put(13, "M");
	Rotor5Inv.put(10,"J");
	Rotor5Inv.put(17, "Q");
	Rotor5Inv.put(15, "O");
	Rotor5Inv.put(6, "F");
	Rotor5Inv.put(5, "E");
	Rotor5Inv.put(3, "C");
	Rotor5Inv.put(11, "K");
	
	
  }
}

// https://www.w3schools.com/java/java_hashmap.asp
//capitalCities.get(" imput ") to get the value 